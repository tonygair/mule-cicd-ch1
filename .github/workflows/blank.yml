# This is a basic workflow to help you get started with Actions

name: CICD Cloudhub 1.0

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Caches dependencies and build outputs to improve workflow execution time.
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          
      # maven build command, could add other flags if needed
      - name: Build
        run: mvn -B package --file pom.xml
        
# ---- END OF 1st Phase (Building and Packaging the App)

# Steps for executing the deployment against Cloudhub Anypoint Platform
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
        
    - name: Deploy to CloudHub
      env:
        CLIENT_ID: ${{ secrets.CA_CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CA_CLIENT_SECRET }}
        BUSINESSID: ${{ secrets.BUSINESS_GROUP_ID }}
      run: |
        mvn package deploy -DmuleDeploy -Denvironment=prod -Dapp-name=hello-tony812 \
        -Dca.clientId=${{ secrets.CA_CLIENT_ID }} -Dca.clientSecret=${{ secrets.CA_CLIENT_SECRET }} \
        -DbusinessGroupId=${{ secrets.BUSINESS_GROUP_ID }} -Dcicd.welcome.message="Hello to github, mule and cloudhub 1 " -Duser="tonygair4learn"
  
